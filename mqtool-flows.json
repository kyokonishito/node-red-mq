[{"id":"22ddcab8f62e1e6a","type":"tab","label":"MQ Tool","disabled":false,"info":"","env":[]},{"id":"01f89ea0d6c98f62","type":"http in","z":"22ddcab8f62e1e6a","name":"send-message","url":"/send-message","method":"post","upload":false,"swaggerDoc":"","x":140,"y":300,"wires":[["f1edf6d54586c804","954e43061a0d3aaa"]]},{"id":"5756441d23ef911b","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":610,"y":280,"wires":[]},{"id":"056c9621d296205e","type":"http in","z":"22ddcab8f62e1e6a","name":"","url":"/mqtool","method":"get","upload":false,"swaggerDoc":"","x":130,"y":80,"wires":[["2aef19a6ab264e71"]]},{"id":"2aef19a6ab264e71","type":"template","z":"22ddcab8f62e1e6a","name":"Toppage","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<html>\n\n<head>\n    <title> IBM MQ Messaging REST API</title>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script>\n    <script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/vue-qriously@1.1.1/dist/vue-qriously.min.js\"></script>\n\n    <!--- check and select from https://www.bootstrapcdn.com/bootswatch/ -->\n    <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/cerulean/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\n    <!-- <link href=\"https://cdn.jsdelivr.net/npm/bootswatch@4.5.2/dist/cerulean/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">> -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/cyborg/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/sketchy/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/flatly/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/sandstone/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/materia/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/litera/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/spacelab/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/superhero/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n    <!-- <link href=\" https://cdn.jsdelivr.net/npm/bootswatch@5.2.2/dist/darkly/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">  -->\n\n\n<body>\n        \n    <div class=\"container\">\n        <div id=\"app\">\n            <div class=\"row\">\n                <!-- <div class=\"col-sm-12\"> -->\n                    <h1> <img src=\"https://raw.githubusercontent.com/kyokonishito/node-red-mq/main/MQ_Light_Icon%404x.png\" width=\"50\" alt=\"IBM MQ\" />\n                         IBM MQ Messaging REST API</h1>\n                \n                <!-- </div> -->\n            </div>\n\n            \n            <div class=\"row\">\n                <form>\n                    <fieldset>\n                      \n                      <legend>MQ Server 情報</legend>\n                      <div class=\"form-group\">\n                        <label for=\"mq_hostname\">RESTAPI endpoint hostname</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"mq_hostname\" placeholder=\"Enter hostname\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"qmgr_name\">QMGR Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"qmgr_name\" placeholder=\"Enter QMGR name\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"q_name\">Queue Name</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"q_name\" placeholder=\"Enter Queue name\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"mq_userid\">userid</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"mq_userid\" placeholder=\"Enter userid\">\n                      </div>\n                      <div class=\"form-group\">\n                        <label for=\"mq_password\">Password</label>\n                        <input type=\"password\" class=\"form-control\" v-model=\"mq_password\" placeholder=\"Password\">\n                      </div>\n                    </fieldset>\n                </form>\n            </div>\n\n  \n            <div class=\"row\">\n                <p> </p>\n            </div>\n\n            <div class=\"row\">\n                <form>\n                    <fieldset>\n                      <legend>Put Message</legend>\n                      <div class=\"form-group\">\n                        <label for=\"send_message\">送付するMessage</label>\n                        <input type=\"text\" class=\"form-control\" v-model=\"send_message\" placeholder=\"送付するMessage\">\n                      </div>\n                     \n                    </fieldset>\n                    <button type=\"button\" @click=\"sendMessage\" class=\"btn btn-primary\">送信</button>\n                </form>\n            </div>\n\n\n            \n            <div class=\"row\">\n                <div class=\"col-sm-5\" v-show=\"puttingMessage\">\n                    <div class=\"progress\">\n                        <div class=\"progress-bar progress-bar-striped  bg-danger progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                            aria-valuemax=\"100\" style=\"width: 100%\">\n                            Loading......\n            \n                        </div>\n                    </div>\n                </div>\n            \n            \n                <div v-show=\"!puttingMessage  && displayResults2\" >\n\n                    <table class=\"table table-hover\">\n                            <tbody>\n                                <tr >\n                                    <td>Result</td><td><span v-html=\"result\"></span></td>\n                                </tr>\n                                <tr >\n                                    <td>status_code</td><td><span v-html=\"status_code\"></span></td>\n                                </tr>\n                                <tr>\n                                    <td>ibm_mq_md_messageId</td><td><span v-html=\"ibm_mq_md_messageId\"></span></td>\n                                </tr>\n                                <tr>\n                                    <td>Message</td><td><span v-text=\"return_message\"></span></td>\n                                </tr>\n                            </tbody>\n                    </table>\n                    \n                </div>\n            </div>\n            <div class=\"row\">\n                    <p> </p>\n            </div>\n\n            <div class=\"row\">\n                <form>\n                    <fieldset>\n                        <legend>Get Message</legend>\n                    </fieldset>\n\n                    <button type=\"button\" @click=\"getMessage\" class=\"btn btn-primary\">Get Message from <span v-html=\"q_name\"></span></button>\n                </form>\n            </div>\n\n            <div class=\"row\">\n                    <div class=\"col-sm-5\" v-show=\"gettingMessage\" >\n                        <div class=\"progress\">\n                            <div class=\"progress-bar progress-bar-striped  bg-danger progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\"\n                                aria-valuemax=\"100\" style=\"width: 100%\">\n                                Loading......\n                \n                            </div>\n                        </div>\n                    </div>\n                \n                \n                    <div v-show=\"!gettingMessage && displayResults3\">\n\n                        <table class=\"table table-hover\">\n                            \n                            <tbody>\n                                <tr >\n                                    <td>Result</td><td><span v-html=\"get_result\"></span></td>\n                                </tr>\n                                <tr >\n                                    <td>status_code</td><td><span v-html=\"get_status_code\"></span></td>\n                                </tr>\n                                <tr>\n                                    <td>ibm_mq_md_messageId</td><td><span v-html=\"get_ibm_mq_md_messageId\"></span></td>\n                                </tr>\n                                <tr>\n                                    <td>Message</td><td><span v-text=\"get_return_message\"></span></td>\n                                </tr>\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n    \n            <div class=\"row\">\n                <p> </p>\n            </div>\n            \n            <div class=\"row\">\n                <div class=\"col-sm-12\" >\n                    このページのQRコード: <span v-html=\"url_value\"></span>\n                </div>\n                <div class=\"col-sm-12\">\n                    <qriously :value=\"url_value\" />\n                </div>\n\n            </div>\n            <div class=\"row\">\n                <p> </p>\n                <p> </p>\n            </div>\n        </div>\n    </div>\n\n    <script type=\"text/javascript\"> \n\n        var app = new Vue({\n            el: '#app',\n            data: {\n                mq_hostname: null,\n                qmgr_name: null,\n                q_name: null,\n                mq_userid: null,\n                mq_password: null,\n                send_message: null,\n                status_code: null,\n                ibm_mq_md_messageId: null,\n                result: null,\n                return_message: null,\n                get_status_code: null,\n                get_ibm_mq_md_messageId: null,\n                get_result: null,\n                get_return_message: null,\n                url_value: location.href,\n                puttingMessage: false,\n                answerPuttingMessage: null,\n                gettingMessage: false,\n                answerGettingMessage: null,\n                displayResults2: false,\n                displayResults3: false,\n                axios_timeout: 5000\n                \n            },\n            methods: {\n                \n                async sendMessage(){\n                    var url =\"./send-message\"\n\n                    var params = new URLSearchParams();\n\n                    params.append('mq_hostname', this.mq_hostname);\n                    params.append('qmgr_name', this.qmgr_name);\n                    params.append('q_name', this.q_name);\n                    params.append('mq_userid', this.mq_userid);\n                    params.append('mq_password', this.mq_password);\n                    params.append('send_message', this.send_message);\n                    \n                    try {\n                        this.puttingMessage = true\n\n                        // const headers = {  'Content-Type': 'application/json' }\n                        const response = await axios.post(url, params, {timeout: this.axios_timeout})\n                        this.answerPuttingMessage = response.header\n                        this.result = response.data['result']  \n                        this.return_message = response.data['message']  \n                        this.status_code = response.data['status_code']\n                        this.ibm_mq_md_messageId = response.data['ibm_mq_md_messageid']     \n\n                        console.log(response);\n                        console.log(this.answerPuttingMessage);\n\n                    } catch(e){\n                        console.log('ERR!');  \n                        console.log(e);\n                        if(e.name == \"AxiosError\"){\n                            this.result = e.name\n                            this.return_message = e.message\n                            this.status_code = e.code\n                        }\n                        else {\n                            this.result = e.response.data['result']  \n                            this.return_message = e.response.data['message']  \n                            this.status_code = e.response.data['status_code']\n                            this.ibm_mq_md_messageId = e.response.data['ibm_mq_md_messageid'] \n                        }    \n                   \n                    } finally {                        \n                        this.puttingMessage = false\n                        this.displayResults2 = true\n                    }\n                },\n\n                async getMessage(){\n                    var url =\"./get-message\"\n                    var params = new URLSearchParams();\n\n                    params.append('mq_hostname', this.mq_hostname);\n                    params.append('qmgr_name', this.qmgr_name);\n                    params.append('q_name', this.q_name);\n                    params.append('mq_userid', this.mq_userid);\n                    params.append('mq_password', this.mq_password);\n                 \n\n                    try {\n                        this.gettingMessage = true\n\n                        // const headers = {  'Content-Type': 'application/json' }\n                        const response = await axios.post(url, params, {timeout: this.axios_timeout})\n                        this.answerGettingMessage = response.header\n                        if (response.status == 204){\n                            this.get_result = 'OK';\n                            this.get_return_message = 'No messages in ' + this.q_name;\n                            this.get_status_code = response.status;\n                            this.get_ibm_mq_md_messageId = \"\";\n                        } else {\n                            this.get_result = response.data['result']  \n                            this.get_return_message = response.data['message']  \n                            this.get_status_code = response.data['status_code']\n                            this.get_ibm_mq_md_messageId = response.data['ibm_mq_md_messageid']   \n                        }\n                        \n                        console.log(response);\n                        console.log(this.answerGettingMessage);\n\n                    } catch(e){\n                        console.log('ERR!');\n                        console.log(e);\n                        if(e.name == \"AxiosError\"){\n                            this.get_result = e.name\n                            this.get_return_message = e.message\n                            this.get_status_code = e.code\n                        }\n                        else {\n                        this.get_result = e.response.data['result']  \n                            this.get_return_message = e.response.data['message']  \n                            this.get_status_code = e.response.data['status_code']\n                            this.get_ibm_mq_md_messageId = e.response.data['ibm_mq_md_messageid']  \n                        }   \n\n                    } finally {\n                        this.gettingMessage = false\n                        this.displayResults3 = true\n                    }\n\n                }\n            }\n        })\n    </script>\n</body>\n</html>","output":"str","x":320,"y":80,"wires":[["c0a4da9e056cd7a4"]]},{"id":"c0a4da9e056cd7a4","type":"http response","z":"22ddcab8f62e1e6a","name":"","statusCode":"","headers":{},"x":510,"y":80,"wires":[]},{"id":"f1edf6d54586c804","type":"function","z":"22ddcab8f62e1e6a","name":"Create Http Req Data","func":"// send-message \n// POST Dataの取得\nvar hostname = msg.payload.mq_hostname;\nvar qmgr_name = msg.payload.qmgr_name;\nvar q_name= msg.payload.q_name;\nvar send_message= msg.payload.send_message;\n\n// REST API URL\nmsg.api_url = hostname+'/ibmmq/rest/v1/messaging/qmgr/'+qmgr_name+'/queue/'+q_name+'/message'\n\n// Set Basic Auth\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Basic ' + new Buffer(msg.payload.mq_userid + ':' + msg.payload.mq_password).toString('base64');\nmsg.headers['content-type'] = 'text/plain;';\nmsg.headers['ibm-mq-rest-csrf-token'] = 'blank';\n\n// メッセージの前に現在日時を付与\nconst date1 = new Date();\nmsg.payload = date1.toLocaleString('ja-JP', { timeZone: 'Asia/Tokyo' }) + ': ' +  send_message ;\nmsg.send_message=msg.payload;\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":300,"wires":[["5756441d23ef911b","eeb38dbbf29e573e"]]},{"id":"954e43061a0d3aaa","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":370,"y":240,"wires":[]},{"id":"eeb38dbbf29e573e","type":"http request","z":"22ddcab8f62e1e6a","name":"","method":"POST","ret":"txt","paytoqs":"body","url":"{{{ api_url  }}}","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"x":650,"y":340,"wires":[["eafb67d8c4b3a5ff","ae322d0ef310e00e"]]},{"id":"eafb67d8c4b3a5ff","type":"function","z":"22ddcab8f62e1e6a","name":"parse respose","func":"// post-message\n// parse respose\nvar status_code = msg.statusCode;\nvar result = ''\nvar ibm_mq_md_messageid = ''\nvar message = ''\n\nif(status_code == 201){\n    result = 'OK';\n    ibm_mq_md_messageid = msg.headers['ibm-mq-md-messageid'];\n    message = msg.send_message;\n}\nelse{\n    result = 'NG';\n    message = msg.payload;\n}\n\n\nmsg.payload = {\n    'result': result,\n    'message': message,\n    'status_code': status_code,\n    'ibm_mq_md_messageid': ibm_mq_md_messageid\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":440,"wires":[["8deb203fcde78e57","f12d96a60a0b3fee"]]},{"id":"8deb203fcde78e57","type":"debug","z":"22ddcab8f62e1e6a","name":"response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":880,"y":400,"wires":[]},{"id":"f12d96a60a0b3fee","type":"http response","z":"22ddcab8f62e1e6a","name":"","statusCode":"","headers":{},"x":870,"y":500,"wires":[]},{"id":"ae322d0ef310e00e","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":830,"y":320,"wires":[]},{"id":"389af0cc39670c8f","type":"http in","z":"22ddcab8f62e1e6a","name":"get-message","url":"/get-message","method":"post","upload":false,"swaggerDoc":"","x":150,"y":660,"wires":[["3c7a2158031eba62","068d2fc317ca6288"]]},{"id":"3f2ec79f85fc5009","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":630,"y":640,"wires":[]},{"id":"3c7a2158031eba62","type":"function","z":"22ddcab8f62e1e6a","name":"Create Http Req Data","func":"// get-message \n// POST Dataの取得\nvar hostname = msg.payload.mq_hostname;\nvar qmgr_name = msg.payload.qmgr_name;\nvar q_name= msg.payload.q_name;\n\n// REST API URL\nmsg.api_url = hostname+'/ibmmq/rest/v1/messaging/qmgr/'+qmgr_name+'/queue/'+q_name+'/message'\n\n// Set Basic Auth\nmsg.headers = {};\nmsg.headers['Authorization'] = 'Basic ' + new Buffer(msg.payload.mq_userid + ':' + msg.payload.mq_password).toString('base64');\nmsg.headers['content-type'] = 'text/plain;';\nmsg.headers['ibm-mq-rest-csrf-token'] = 'blank';\n\n\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":660,"wires":[["3f2ec79f85fc5009","dfbb751a66566d5c"]]},{"id":"068d2fc317ca6288","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":410,"y":600,"wires":[]},{"id":"dfbb751a66566d5c","type":"http request","z":"22ddcab8f62e1e6a","name":"","method":"DELETE","ret":"txt","paytoqs":"body","url":"{{{ api_url  }}}","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"x":670,"y":700,"wires":[["9733c9e4632de71a","ff579835c94b2d5b"]]},{"id":"9733c9e4632de71a","type":"function","z":"22ddcab8f62e1e6a","name":"parse reponse","func":"// get-message\n// parse reponse\nvar status_code = msg.statusCode;\nvar result = ''\nvar ibm_mq_md_messageid = ''\nvar message = ''\n\nif(status_code == 200){\n    result = 'OK';\n    ibm_mq_md_messageid = msg.headers['ibm-mq-md-messageid'];\n}\nelse{\n    result = 'NG';\n}\n\nmessage = msg.payload;\n\n\nmsg.payload = {\n    'result': result,\n    'message': message,\n    'status_code': status_code,\n    'ibm_mq_md_messageid': ibm_mq_md_messageid\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":800,"wires":[["12f3b3153dafca7d","3802a6bdc1e29428"]]},{"id":"12f3b3153dafca7d","type":"debug","z":"22ddcab8f62e1e6a","name":"response","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":900,"y":760,"wires":[]},{"id":"ff579835c94b2d5b","type":"debug","z":"22ddcab8f62e1e6a","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":850,"y":680,"wires":[]},{"id":"3802a6bdc1e29428","type":"http response","z":"22ddcab8f62e1e6a","name":"","statusCode":"","headers":{},"x":910,"y":880,"wires":[]}]